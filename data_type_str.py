# 자료형과 기본자료형
# 프로그래밍에서 프로그램이 처리할 수 있는 모든 것을 자료(data)란 한다.
# 기능과 역할에 따라 자료를 자료형(자료의 형식)으로 구분 
# 기본 자료형 - 문자열, 숫자(정수, 실수), 불(참, 거짓)
# type()함수를 이용하여 괄호 내부에 자료를 넣으면 어떤 자료형인지 확인 가능

print(type("hello"))

# 문자열 
# 문자열(string) - "hello". 'hello' 이용하여 글자들이 나열된 것을 말함
# escape 사용하여 문자열 만들기

print("\"안녕하세요\"라고 말했습니다")
print("안녕하세요\n안녕하세요")
print("이름\t나이\t지역")

# \를 이용하면 줄바꿈이 적용되지 않는다.

print("""\
동해물과 백두산이 마르고 닳도록
하느님이 보우하사 우리나라 만세\
""") 

# 문자열 연산자
# 연결 연산자(+), 반복 연산자(*), 선택연산자[]
# 연결 연산자(+)

a = "오늘은"
b = "재택근무"

print(type(a))
print(type(b))
print(a + b)

# 반복 연산자(*) - 문자열과 숫자 조합으로 구성

print(("오늘은" + "재택근무\n") * 3)
print((a + b+"\n") * 3)

# 문자열 선택 연산자[] - 인덱싱(문자열 하나 선택)
# 인덱스 유형 - 제로 인덱스, 원 인덱스
# 파이썬은 제로 인덱스를 사용함

select_index = "hello python"

print(select_index[0])
print(select_index[-1])

# 문자열 범위 선택 연산자[:] - 슬라이싱(문자열의 특정 범위를 선택할 때 사용)
# 범위 끝에는 항상 -1

range_index = "hello python"

print(range_index[0:5])
print(range_index[1:])
print(range_index[:4])

# 문자열 길이 구하기
# len() 함수를 이용하여 문자열 길이를 구할 때는 제로 인덱스 방식과 다르게 1부터 시작한다.

print(len(range_index))



